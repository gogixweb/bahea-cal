name: Continuous Integration and Delivery

on: [push]

env:
  BACKEND_IMAGE: ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')/backend

jobs:

  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v2
      - name: Add environment variables to .env
        run: |
          echo DJANGO_DEBUG=${{ env.DJANGO_DEBUG}} >> .env
          echo DJANGO_DATABASES__default__HOST=${{ secrets.DJANGO_DATABASES__default__HOST }} >> .env
          echo DJANGO_DATABASES__default__ENGINE=${{ secrets.DJANGO_DATABASES__default__ENGINE }} >> .env
          echo DJANGO_DATABASES__default__NAME=${{ secrets.DJANGO_DATABASES__default__NAME }} >> .env
          echo DJANGO_DATABASES__default__OPTIONS=${{ secrets.DJANGO_DATABASES__default__OPTIONS }} >> .env
          echo DJANGO_DATABASES__default__PORT=${{ secrets.DJANGO_DATABASES__default__PORT }} >> .env
          echo DJANGO_DATABASES__default__USER=${{ secrets.DJANGO_DATABASES__default__USER }} >> .env
          echo DJANGO_DATABASES__default__PASSWORD=${{ secrets.DJANGO_DATABASES__default__PASSWORD }} >> .env
          echo DJANGO_ENVIRONMENT=${{ env.DJANGO_ENVIRONMENT }} >> .env
          echo DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }} >> .env
          echo DJANGO_BASE_URL=${{ env.DJANGO_BASE_URL }} >> .env
          echo DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }} >> .env
          echo DJANGO_SETTINGS_MODULE=${{ secrets.DJANGO_SETTINGS_MODULE }} >> .env
          echo AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} >> .env
          echo AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} >> .env
      - name: Set environment variables
        run: |
          echo "BACKEND_IMAGE=$(echo ${{ env.BACKEND_IMAGE }} )" >> $GITHUB_ENV
      - name: Log in to GitHub Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.BAHEA_CAL_DEPLOY_TOKEN }}
      - name: Pull images
        run: |
          docker pull ${{ env.BACKEND_IMAGE }} || true
      - name: Build images
        run: |
          docker build -f Dockerfile -t ${{env.BACKEND_IMAGE}}:latest
      - name: Push images
        run: |
          docker push ${{ env.BACKEND_IMAGE }}
